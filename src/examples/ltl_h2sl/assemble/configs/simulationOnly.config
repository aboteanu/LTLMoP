======== General Config ========

Actuator_Proposition_Mapping: # Mapping between actuator propositions and actuator handler functions
put_left = share.DummyActuatorHandler.setActuator(name='put_left')
put_right = share.DummyActuatorHandler.setActuator(name='put_right')
lift_assembly = share.DummyActuatorHandler.setActuator(name='lift_assembly')
help = share.DummyActuatorHandler.setActuator(name='help')

Initial_Truths: # Initially true propositions

Main_Robot: # The name of the robot used for moving in this config
rocbot

Name: # Configuration name
simulationOnly

Region_Tags: # Mapping from tag names to region groups, for quantification
{}

Sensor_Proposition_Mapping: # Mapping between sensor propositions and sensor handler functions
right_available = rocbot.RocbotSensorHandler.sensor_type_right(object_type1="OBJECT_TYPE_U_BLOCK", object_color1="na",object_type2="OBJECT_TYPE_ROBOT_TORSO",object_color2="na")
left_available = rocbot.RocbotSensorHandler.sensor_type_left(object_type1="OBJECT_TYPE_U_BLOCK", object_color1="na",object_type2="OBJECT_TYPE_ROBOT_TORSO",object_color2="na")

======== Robot1 Config ========

CalibrationMatrix: #default, so it does not show warnings
array([[1, 0, 0],
       [0, 1, 0],
       [0, 0, 1]])

InitHandler: # Robot default init handler with default argument values
rocbot.RocbotInitHandler()

SensorHandler: # Rocbot simulator world state, triggers sensors
rocbot.RocbotSensorHandler()

DriveHandler:
share.Drive.HolonomicDriveHandler(multiplier=50.0,maxspeed=999.0)

LocomotionCommandHandler:
rocbot.RocbotLocomotionCommandHandler(speed=1.0)

MotionControlHandler:
share.MotionControl.VectorControllerHandler()

PoseHandler:
rocbot.RocbotNullPoseHandler()

RobotName: # Robot Name
rocbot

Type: # Robot type
rocbot
