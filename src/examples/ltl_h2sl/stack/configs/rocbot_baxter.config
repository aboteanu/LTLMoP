======== General Config ======== 
Initial_Truths: # Initially true propositions 

Main_Robot: # The name of the robot used for moving in this config 
rocbot_baxter 

Name: # Configuration name 
rocbot_baxter 

Region_Tags: # Mapping from tag names to region groups, for quantification 
{} 

Sensor_Proposition_Mapping:
observed_cube_red = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_observed (object_ids = ["redcube1"] )
observed_cube_blue = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_observed (object_ids = ["bluecube1"] )
observed_cube_green = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_observed (object_ids = ["greencube1"] )

stacked_cube_red = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_stacked (object_ids = ["redcube1"] )
stacked_cube_blue = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_stacked (object_ids = ["bluecube1"] )
stacked_cube_green = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_stacked (object_ids = ["greencube1"] )

understack_cube_red = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_understack (object_ids = ["redcube1"] )
understack_cube_blue = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_understack (object_ids = ["bluecube1"] )
understack_cube_green = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_understack (object_ids = ["greencube1"] )

Actuator_Proposition_Mapping:
pickup_robot_right_hand_red = rocbot_baxter.RocbotBaxterActionHandler.action_dispatch( gripper="right", action_type="ACTION_TYPE_PICKUP", object_ids = ["right_gripper_base", "redcube1"] )
pickup_robot_right_hand_blue = rocbot_baxter.RocbotBaxterActionHandler.action_dispatch( gripper="right", action_type="ACTION_TYPE_PICKUP", object_ids = ["right_gripper_base", "bluecube1"] )
pickup_robot_right_hand_green = rocbot_baxter.RocbotBaxterActionHandler.action_dispatch( gripper="right", action_type="ACTION_TYPE_PICKUP", object_ids = ["right_gripper_base", "greencube1"] )

drop_robot_right_hand_blue = rocbot_baxter.RocbotBaxterActionHandler.action_dispatch( gripper="right", action_type="ACTION_TYPE_DROP", object_ids = ["right_gripper_base", "bluecube1"] ) 
drop_robot_right_hand_red = rocbot_baxter.RocbotBaxterActionHandler.action_dispatch( gripper="right", action_type="ACTION_TYPE_DROP", object_ids = ["right_gripper_base", "redcube1"] ) 
drop_robot_right_hand_green = rocbot_baxter.RocbotBaxterActionHandler.action_dispatch( gripper="right", action_type="ACTION_TYPE_DROP", object_ids = ["right_gripper_base", "greencube1"] ) 

======== Robot1 Config ======== 
CalibrationMatrix: # 3x3 matrix for converting coordinates, stored as lab->map 
array([[1, 0, 0], 
       [0, 1, 0], 
       [0, 0, 1]]) 
 
SensorHandler: # RocbotBaxter simulator world state, triggers sensors 
rocbot_baxter.RocbotBaxterSensorHandler() 
 
ActuatorHandler: 
rocbot_baxter.RocbotBaxterActionHandler() 
 
DriveHandler: # Input value for robot drive handler, refer to file inside the handlers/drive folder 
share.Drive.HolonomicDriveHandler(multiplier=50.0,maxspeed=999.0) 
 
InitHandler: # Input value for robot init handler, refer to the init file inside the handlers/robots/Type folder 
rocbot_baxter.RocbotBaxterInitHandler() 
 
LocomotionCommandHandler: # Input value for robot locomotion command handler, refer to file inside the handlers/robots/Type folder 
rocbot_baxter.RocbotBaxterLocomotionCommandHandler(speed=1.0) 
 
MotionControlHandler: # Input value for robot motion control handler, refer to file inside the handlers/motionControl folder 
share.MotionControl.VectorControllerHandler() 
 
PoseHandler: # Input value for robot pose handler, refer to file inside the handlers/pose folder 
rocbot_baxter.RocbotBaxterNullPoseHandler() 
 
RobotName: # Robot Name 
rocbot_baxter 
 
Type: # Robot type 
rocbot_baxter 
