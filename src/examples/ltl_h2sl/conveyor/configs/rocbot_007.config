# This is a configuration definition file in folder "/home/adrian/ltl_h2sl/build/ltlmop/src/ltlmop/src/examples/ltl_h2sl/conveyor/configs".
# Format details are described at the beginning of each section below.


======== General Config ========

Actuator_Proposition_Mapping: # Mapping between actuator propositions and actuator handler functions
pickup_from_tray = rocbot_baxter.RocbotBaxterActionHandler.action_dispatch( action_type="ACTION_TYPE_PICKUP", objects=[ (" ", "OBJECT_TYPE_ROBOT_RIGHT_HAND",  "OBJECT_COLOR_UNKNOWN"), ("cube1","OBJECT_TYPE_CUBE", "OBJECT_COLOR_UNKNOWN"), ("tray", "OBJECT_TYPE_TRAY", "OBJECT_COLOR_UNKNOWN") ]) 
pickup_from_side = rocbot_baxter.RocbotBaxterActionHandler.action_dispatch( action_type="ACTION_TYPE_PICKUP", objects=[ (" ", "OBJECT_TYPE_ROBOT_LEFT_HAND", "OBJECT_COLOR_UNKNOWN"), ("cube2","OBJECT_TYPE_CUBE", "OBJECT_COLOR_UNKNOWN")("garbage_can1","OBJECT_TYPE_BIN", "OBJECT_COLOR_UNKNOWN") ]) 
drop_in_bin = rocbot_baxter.RocbotBaxterActionHandler.action_dispatch( action_type="ACTION_TYPE_DROP", objects=[ (" ","robot_hand_left", "OBJECT_COLOR_UNKNOWN"), ("cube1","OBJECT_TYPE_CUBE", "OBJECT_COLOR_UNKNOWN"), ("garbage_can2","OBJECT_TYPE_BIN", "OBJECT_COLOR_UNKNOWN") ]) 
place_on_tray = rocbot_baxter.RocbotBaxterActionHandler.action_dispatch( action_type="ACTION_TYPE_PLACE", objects=[ (" ","OBJECT_TYPE_ROBOT_LEFT_HAND", "OBJECT_COLOR_UNKNOWN"), ("cube1","OBJECT_TYPE_CUBE", "OBJECT_COLOR_UNKNOWN"), ("tray","OBJECT_TYPE_TRAY", "OBJECT_COLOR_UNKNOWN") ]) 
  
Initial_Truths: # Initially true propositions

Main_Robot: # The name of the robot used for moving in this config
rocbot_baxter

Name: # Configuration name
rocbot_baxter_007

Region_Tags: # Mapping from tag names to region groups, for quantification
{}

Sensor_Proposition_Mapping: # Mapping between sensor propositions and sensor handler functions
tray_on_left = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_left(object_type1="OBJECT_TYPE_TRAY", object_color1="OBJECT_COLOR_UNKNOWN",object_type2="OBJECT_TYPE_ROBOT_TORSO",object_color2="OBJECT_COLOR_UNKNOWN")
tray_full = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_full(object_type="OBJECT_TYPE_TRAY", object_color="OBJECT_COLOR_UNKNOWN")
tray_on_right = rocbot_baxter.RocbotBaxterSensorHandler.sensor_type_right(object_type1="OBJECT_TYPE_TRAY", object_color1="OBJECT_COLOR_UNKNOWN",object_type2="OBJECT_TYPE_ROBOT_TORSO",object_color2="OBJECT_COLOR_UNKNOWN")


======== Robot1 Config ========

CalibrationMatrix: # 3x3 matrix for converting coordinates, stored as lab->map
array([[1, 0, 0],
       [0, 1, 0],
       [0, 0, 1]])

DriveHandler: # Input value for robot drive handler, refer to file inside the handlers/drive folder
share.Drive.HolonomicDriveHandler(multiplier=50.0,maxspeed=999.0)

InitHandler: # Input value for robot init handler, refer to the init file inside the handlers/robots/Type folder
rocbot_baxter.RocbotBaxterInitHandler()

LocomotionCommandHandler: # Input value for robot locomotion command handler, refer to file inside the handlers/robots/Type folder
rocbot_baxter.RocbotBaxterLocomotionCommandHandler(speed=1.0)

MotionControlHandler: # Input value for robot motion control handler, refer to file inside the handlers/motionControl folder
share.MotionControl.VectorControllerHandler()

PoseHandler: # Input value for robot pose handler, refer to file inside the handlers/pose folder
rocbot_baxter.RocbotBaxterNullPoseHandler()

RobotName: # Robot Name
rocbot_baxter

Type: # Robot type
rocbot_baxter

